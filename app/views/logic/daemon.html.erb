    <div class = "window bfc-root">
        <div class="sideBarWrapper">
            <div class="sideBarTitle">
                Logic Daemon
            </div>
            <button class="sideBar" href = "#">Help & Resources</button>
            <button class="sideBar" id="palette-button">Symbol Palette</button>
            <button class="sideBar" id="example-button" href = "#">Example</button>
            <button class="sideBar" href = "#">General Info</button>
            <button class="sideBar" href = "#">Intro to the proof system</button>
            <button class="sideBar" href = "#">Proof Strategies</button>
            <button class="sideBar" href = "#">Do statements</button>
            <button class="sideBar" href = "#">Typing Symbols</button>
        </div>
        
        <div class="palette" id="palette" style="float: right; display: none;">
            <div id="row1">
                <button class="palette-button" id="and" onclick="pressed('&')">&and;</button>
                <button class="palette-button" id="conditional" onclick="pressed('->')">&rarr;</button>
                <button class="palette-button" id="forall" onclick="pressed('@')">&forall;</button>
            </div>
            <div id="row2">
                <button class="palette-button" id="or" onclick="pressed('v')">&or;</button>
                <button class="palette-button" id="biconditional" onclick="pressed('<->')">&harr;</button>
                <button class="palette-button" id="exist" onclick="pressed('$')">&exist;</button>
            </div>
            <div id="row3">
                <button class="palette-button" id="not" onclick="pressed('~')">~</button>
                <button class="palette-button" id="neq" onclick="pressed('ne')">&ne;</button>
                <button class="palette-button" id="var">var</button>
            </div>
            <div id="row4">
                <button class="palette-button" id="lparen" onclick="pressed('(')">([</button>
                <button class="palette-button" id="eq" onclick="pressed('=')">=</button>
                <button class="palette-button" id="rparen" onclick="pressed(')')">])</button>
            </div>
        </div>

        <div class="logic_calc">
            <div>
                <h1 style = "h1">Logic Daemon</h1>
            </div>

            <div>    
                <h2 style = "h2">Enter a sequent you will attempt to prove</h2>
            </div>
        
            <table align="center">
                <tr>
                    <td>
                        <em>Premises(separated by commas):</em><br>
                    </td>

                    <td>
                       
                    </td>

                    <td>
                        <em>Conclusion</em><br>
                       
                    </td>
                </tr>
                <tr>    
                    <td>
                        <input type="text" name="premise" id="premise" value=<%= @premise %>>
                    </td>

                    <td>
                         <strong> |- </strong>
                    </td>

                    <td>
                        <input type"text" name="conclusion" id="conclusion" value=<%= @conclusion %>>
                    </td>
                <tr>

            </table>

            <div align="center">
                <form>
	                <input value="Check Proof" name="check_proof" type="submit">
	            </form>
	        </div>

            <div align="center">
                <textarea id="proof" name="proof" rows = "16" cols="67"><%=@proof.gsub("\r", "") %> </textarea>
            </div>
            <div class="bottom_nav">
                <div class = "bottom_button1">
                    <form>
                        <input value="Restart" name="restart_button" type="submit">
                    </form>
                </div>
                
                <div class = "bottom_button3">
                    <form>
                        <input value="Example" id="example-button" name="example_button" type="submit">
                    </form>
                </div>
                
            </div>
        </div>
        
        <div id="profile-information" class="">
		<div class="row pad-top">
			<div class="col-xs-6 col-sm-6 field-row">
				<div class="roboto bold black field-label">
					<%= simple_format(@deamon_response) %>
			</div>
		</div>
        </div>
    </div>
    
    <script type="text/javascript">
        /* Initialization */
        var caret = 0; //Location of cursor in the proof textarea.
        var text = ""; //Content of the proof textarea.
        var parens = true;
        var proof = document.getElementById('proof');
            /* Add listeners to the proof textarea to update the caret whenever it moves. */
            proof.addEventListener('keyup', e => {
                caret = e.target.selectionStart;
                console.log("Caret changed from key: " + caret);
            })
            proof.addEventListener('click', e => {
                caret = e.target.selectionStart;
                console.log("Caret changed from click: " + caret);
            })
            proof.addEventListener("input", e => {
                text = proof.value;
                caret = e.target.selectionStart;
                if (text.slice(-1) === "(" || text.slice(-1) === "]"){
                    parens = false;
                }
                if (text.slice(-1) === ")" || text.slice(-1) === "["){
                    parens = true;
                }
                console.log("Text changed: " + text);
            })
            
        //Listen to palette button so we can show the palette when clicked.
        document.getElementById('palette-button').addEventListener('click', e => {
            togglePalette();
        })
        document.getElementById('example-button').addEventListener('click', e => {
            text = "1       (1) PvQ->R    A\n2       (2) P         A\n2       (3) PvQ       2 vI\n1,2     (4) R         1,3 ->E\n5       (5) @xFx      A\n5       (6) Fa        5 @E\n1,2,5   (7) Fa&R      4,6 &I\n8       (8) Fa&R->S   A\n1,2,8,5 (9) S         7,8 ->E"
            document.getElementById('premise').value = "PvQ->R, P, @xFx, Fa&R->S";
            document.getElementById('conclusion').value = "S";
            proof.value = text;
        })
        
        /*** functions ***/
        
        /* This function displays or hides the symbol palette depending on its current status */
        function togglePalette(){
            var x = document.getElementById("palette");
            if (x.style.display === "none") {
                x.style.display = "block";
            } else {
                x.style.display = "none";
            }
        }
        
        /* This function updates the proof textarea when a symbol from the palette is pressed. */
        function pressed(str){
            if (str === 'ne'){
                if (text.length != 0){
                    text = text.slice(0, caret-1) + "~" + text.slice(caret-1, caret) + "=" + text.slice(caret);   
                } else {
                    text = "~=";
                }
            }
            else {
                if (str === '('){
                    if (parens) {
                        parens = false;
                    } else {
                        parens = true;
                        str = '['
                    }
                }
                if (str === ')'){
                    if (!parens) {
                        parens = true;
                    } else {
                        parens = false;
                        str = ']'
                    }
                }
                text = text.slice(0, caret) + str + text.slice(caret);
            }
            proof.value = text;
            caret += str.length;
        }
	    dragElement(document.getElementById(("palette")));
            
            function dragElement(elmnt) {
              var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;
              if (document.getElementById(elmnt.id + "header")) {
                /* if present, the header is where you move the DIV from:*/
                document.getElementById(elmnt.id + "header").onmousedown = dragMouseDown;
              } else {
                /* otherwise, move the DIV from anywhere inside the DIV:*/
                elmnt.onmousedown = dragMouseDown;
              }
            
              function dragMouseDown(e) {
                e = e || window.event;
                // get the mouse cursor position at startup:
                pos3 = e.clientX;
                pos4 = e.clientY;
                document.onmouseup = closeDragElement;
                // call a function whenever the cursor moves:
                document.onmousemove = elementDrag;
              }
            
              function elementDrag(e) {
                e = e || window.event;
                // calculate the new cursor position:
                pos1 = pos3 - e.clientX;
                pos2 = pos4 - e.clientY;
                pos3 = e.clientX;
                pos4 = e.clientY;
                // set the element's new position:
                elmnt.style.top = (elmnt.offsetTop - pos2) + "px";
                elmnt.style.left = (elmnt.offsetLeft - pos1) + "px";
              }
            
              function closeDragElement() {
                /* stop moving when mouse button is released:*/
                document.onmouseup = null;
                document.onmousemove = null;
              }
            }
    </script>
